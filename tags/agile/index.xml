<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>agile on Tales about Software Engineering</title><link>https://beny23.github.io/tags/agile/</link><description>Recent content in agile on Tales about Software Engineering</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>Software Design Systems</copyright><lastBuildDate>Thu, 01 Sep 2022 02:30:32 +0000</lastBuildDate><atom:link href="https://beny23.github.io/tags/agile/index.xml" rel="self" type="application/rss+xml"/><item><title>Less is more agile</title><link>https://beny23.github.io/posts/my_take_on_engineering_room_9/</link><pubDate>Thu, 01 Sep 2022 02:30:32 +0000</pubDate><guid>https://beny23.github.io/posts/my_take_on_engineering_room_9/</guid><description>Dave Farley and Allen Holub are two people that I respect hugely when it comes to Software Development. I&amp;rsquo;ve been following them on twitter for quite a while, and am always taken in about their takes on driving continuous delivery and &amp;ldquo;lowercase agile&amp;rdquo; forward. So when both came together for Dave&amp;rsquo;s Engineering Room (sponsored by Equal Experts, who I work with), it was bound to be very interesting.
In this post I try to outline my key takeaways from watching the chat.</description></item><item><title>A mission statement that actually makes sense</title><link>https://beny23.github.io/posts/simple_and_secure_services_for_all/</link><pubDate>Thu, 11 Aug 2022 16:40:01 +0100</pubDate><guid>https://beny23.github.io/posts/simple_and_secure_services_for_all/</guid><description>I was really positively and pleasantly surprised when I found out what HMRC Digital&amp;rsquo;s mission statement was.
Normally, I am not a fan of mission statements. They usually read like this:
Our mission is focused on six core aspirations the company continually strives to achieve&amp;hellip;
Or some such drivel. Verbal gymnastics to make a company sound like everything to everyone - without being offensive to anyone - which then gets used to &amp;ldquo;align&amp;rdquo; people on mandated fun days.</description></item><item><title>Curating Dependency Vulnerabilities</title><link>https://beny23.github.io/posts/curating_vulnerabilities/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><guid>https://beny23.github.io/posts/curating_vulnerabilities/</guid><description>In this post, I am going to look at an increasingly important part of securing applications: Your supply chain. This includes every library, tool or service that you are using to build, run and monitor your service.
When the log4shell vulnerability hit, it wasn&amp;rsquo;t just a matter of looking at the dependencies that your source code pulls in, but also at the infrastructure you&amp;rsquo;re using and the build pipeline.
Have you had a look at the vulnerability reports of your dependencies lately?</description></item><item><title>How to run a Digital Platform at Scale</title><link>https://beny23.github.io/posts/catalogue_deepdive/</link><pubDate>Sat, 02 Apr 2022 01:48:32 +0000</pubDate><guid>https://beny23.github.io/posts/catalogue_deepdive/</guid><description>This post peels back the covers on what it is like to work with a large digital platform. The platform in question is MDTP - Multichannel Digital Tax Platform, which supports a UK-based tax collection agency which is using a hyperscale cloud provider with a sideline in books.
I&amp;rsquo;ve previously described what it is like to work in MDTP (Making Software. Quickly) during the Covid-19 responses that allowed the UK government to provide financial support for millions turning around projects in record time.</description></item><item><title>What makes a good developer</title><link>https://beny23.github.io/posts/what_makes_a_good_developer/</link><pubDate>Sun, 13 Feb 2022 00:32:20 +0000</pubDate><guid>https://beny23.github.io/posts/what_makes_a_good_developer/</guid><description>A few days back as part of a general discussion about interviewing at Equal Experts, we looked at the question &amp;ldquo;What makes a good developer?&amp;rdquo; Could we come up with a list of qualities in a developer that we&amp;rsquo;d want to look for? This post illustrates my thinking.
Why do you ask? To put it in a bit of context, I&amp;rsquo;m a software developer, I&amp;rsquo;m not a recruiter, but I&amp;rsquo;ve been involved with technical interviewing for quite a while, and have marked a fair number of take-home tests over the years, but recently we thought that the experience was not as good as it could be.</description></item><item><title>Context and Lines - My Take on Engineering Room Ep 1</title><link>https://beny23.github.io/posts/my_take_on_engineering_room_1/</link><pubDate>Fri, 10 Dec 2021 16:30:32 +0000</pubDate><guid>https://beny23.github.io/posts/my_take_on_engineering_room_1/</guid><description>Dave Farley and Martin Fowler are two heavyweights when it comes to Software Development. As well as his latest and hugely anticipated book Modern Software Engineering, Dave wrote Continuous Delivery. Martin co-wrote the Agile Manifesto and Refactoring. All of which are hugely influential to large swathes of software engineers. So when both came together for Dave&amp;rsquo;s new series on YouTube, the Engineering Room (sponsored by Equal Experts), it was bound to be very interesting.</description></item><item><title>Record and publish your meeting</title><link>https://beny23.github.io/posts/screen_record_meetings/</link><pubDate>Sun, 22 Aug 2021 21:43:47 +0100</pubDate><guid>https://beny23.github.io/posts/screen_record_meetings/</guid><description>Scenario: You&amp;rsquo;re in a handover session and explain everything in great detail but Dave is too hungover, Jim is on holiday and Jane is at another meeting and Chris isn&amp;rsquo;t asking any questions and in any case Trevor (who is actually going to be looking after this system after handover) hasn&amp;rsquo;t been recruited yet.
Wouldn&amp;rsquo;t it be useful to record the session and make it available? Now, this piece of writing does not explore whether we should be recording meetings, nor does it attempt to answer the question of whether good documentation wouldn&amp;rsquo;t be preferable to having to sit and spend hours watching someone droning on about something that could be condensed into a five minute read of a blog post.</description></item><item><title>The Shield and the Sword</title><link>https://beny23.github.io/posts/the_shield_and_the_sword/</link><pubDate>Sun, 19 Jul 2020 15:40:01 +0100</pubDate><guid>https://beny23.github.io/posts/the_shield_and_the_sword/</guid><description>To successfully deliver software a developer needs a shield and a sword.
A good product owner, delivery manager or alike that will shield the engineers from having to attend too many meetings, giving long-winded status updates and essentially allow them to get on with it. Shields go to all the meetings with the &amp;ldquo;business&amp;rdquo; and explain what can and cannot be done, without the engineer having to attend. A shield would also filter all the last-minute requirements or requests for gold plating without having to be dragged into endless meetings.</description></item><item><title>Making Software. Quickly.</title><link>https://beny23.github.io/posts/making_software_quickly/</link><pubDate>Sun, 19 Jul 2020 08:54:48 +0100</pubDate><guid>https://beny23.github.io/posts/making_software_quickly/</guid><description>In this post, I describe my personal experience of being part of a software development team working with Equal Experts and HMRC during Covid-19. Under normal circumstances, we&amp;rsquo;re responsible for tax services such as Self Assessment, PAYE Expenses and Benefits, VAT submissions amongst others. These services run on the Multi-channel Digital Tax Platform (MDTP). This platform is hosted in a hyperscale cloud (the cloud provider has a sideline selling books), run in-house by HMRC teams made up of permanent staff and consultants.</description></item></channel></rss>