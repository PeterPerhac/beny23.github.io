<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>appsec on Tales about Software Engineering</title><link>https://beny23.github.io/tags/appsec/</link><description>Recent content in appsec on Tales about Software Engineering</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>Software Design Systems</copyright><lastBuildDate>Mon, 04 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://beny23.github.io/tags/appsec/index.xml" rel="self" type="application/rss+xml"/><item><title>Curating Dependency Vulnerabilities</title><link>https://beny23.github.io/posts/curating_vulnerabilities/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><guid>https://beny23.github.io/posts/curating_vulnerabilities/</guid><description>In this post, I am going to look at an increasingly important part of securing applications: Your supply chain. This includes every library, tool or service that you are using to build, run and monitor your service.
When the log4shell vulnerability hit, it wasn&amp;rsquo;t just a matter of looking at the dependencies that your source code pulls in, but also at the infrastructure you&amp;rsquo;re using and the build pipeline.
Have you had a look at the vulnerability reports of your dependencies lately?</description></item></channel></rss>